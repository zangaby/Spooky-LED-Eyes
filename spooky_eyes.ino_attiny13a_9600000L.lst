
C:\Users\eurhope\AppData\Local\Temp\arduino_build_105416/spooky_eyes.ino.elf:     file format elf32-avr


Disassembly of section .text:

00000000 <__vectors>:
__vectors():
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/pcrt.S:20
  .endm

  .section .vectors
  .global __vectors
__vectors:
  rjmp __init
   0:	0a c0       	rjmp	.+20     	; 0x16 <__ctors_end>
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/pcrt.S:21
  vector __vector_1
   2:	08 c0       	rjmp	.+16     	; 0x14 <__empty_interrupt>
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/pcrt.S:22
  vector __vector_2
   4:	07 c0       	rjmp	.+14     	; 0x14 <__empty_interrupt>
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/pcrt.S:23
  vector __vector_3
   6:	06 c0       	rjmp	.+12     	; 0x14 <__empty_interrupt>
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/pcrt.S:24
  vector __vector_4
   8:	05 c0       	rjmp	.+10     	; 0x14 <__empty_interrupt>
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/pcrt.S:25
  vector __vector_5
   a:	04 c0       	rjmp	.+8      	; 0x14 <__empty_interrupt>
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/pcrt.S:26
  vector __vector_6
   c:	03 c0       	rjmp	.+6      	; 0x14 <__empty_interrupt>
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/pcrt.S:27
  vector __vector_7
   e:	02 c0       	rjmp	.+4      	; 0x14 <__empty_interrupt>
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/pcrt.S:28
  vector __vector_8
  10:	80 c0       	rjmp	.+256    	; 0x112 <__vector_8>
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/pcrt.S:29
  vector __vector_9
  12:	00 c0       	rjmp	.+0      	; 0x14 <__empty_interrupt>

00000014 <__empty_interrupt>:
__vector_1():
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/pcrt.S:44
  vector __vector_19

  ;.text
  .global __empty_interrupt
__empty_interrupt:
  reti
  14:	18 95       	reti

00000016 <__ctors_end>:
__init():
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/pcrt.S:50

    .section .init0
__init:

    .section .init2
    clr r1
  16:	11 24       	eor	r1, r1

00000018 <__do_clear_bss>:
__do_clear_bss():
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/tiny-stack/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:2441
  18:	20 e0       	ldi	r18, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/tiny-stack/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:2442
  1a:	a0 e6       	ldi	r26, 0x60	; 96
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/tiny-stack/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:2443
  1c:	b0 e0       	ldi	r27, 0x00	; 0
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/tiny-stack/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:2444
  1e:	01 c0       	rjmp	.+2      	; 0x22 <.do_clear_bss_start>

00000020 <.do_clear_bss_loop>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/tiny-stack/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:2446
  20:	1d 92       	st	X+, r1

00000022 <.do_clear_bss_start>:
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/tiny-stack/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:2448
  22:	a1 36       	cpi	r26, 0x61	; 97
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/tiny-stack/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:2449
  24:	b2 07       	cpc	r27, r18
/home/jenkins-mingw32/workspace/avr-gcc-staging/label/Ubuntu14.04x64-mingw32/gcc-build/avr/avr25/tiny-stack/libgcc/../../../../../gcc/libgcc/config/avr/lib1funcs.S:2450
  26:	e1 f7       	brne	.-8      	; 0x20 <.do_clear_bss_loop>

00000028 <main>:
main():
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/wiring.c:63
 * @brief Initializing function that runs before setup().
 */
void init()
{
  // Turn on global interrupts
  sei();
  28:	78 94       	sei
pinMode():
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/wiring_digital.c:31
  if(mode == OUTPUT) // Pin as output
    DDRB |= _BV(pin);

  else // Pin as input or input pullup
  {
    DDRB &= ~_BV(pin); // Set pin as input
  2a:	bb 98       	cbi	0x17, 3	; 23
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/wiring_digital.c:27
 *        INPUT_PULLUP - set pin as input and enable internal pullup resistor
 */
void pinMode(uint8_t pin, uint8_t mode)
{
  if(mode == OUTPUT) // Pin as output
    DDRB |= _BV(pin);
  2c:	bc 9a       	sbi	0x17, 4	; 23
  2e:	b8 9a       	sbi	0x17, 0	; 23
  30:	c5 e0       	ldi	r28, 0x05	; 5
digitalWrite():
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/wiring_digital.c:47
 * @param val The state to set. Valid options are HIGH or LOW
 */
void digitalWrite(uint8_t pin, uint8_t val)
{
  if(val)
    PORTB |= _BV(pin);  // Set pin high
  32:	c0 9a       	sbi	0x18, 0	; 24
setup():
C:\Users\eurhope\Documents\Arduino\spooky_eyes\spooky_eyes/spooky_eyes.ino:28
    pinMode(PIN_LED, OUTPUT);

    // intro sequence
    for(byte i=0; i<5; i++) {
        digitalWrite(PIN_LED, HIGH);
        delay(40);
  34:	88 e2       	ldi	r24, 0x28	; 40
  36:	90 e0       	ldi	r25, 0x00	; 0
  38:	62 d0       	rcall	.+196    	; 0xfe <delay>
digitalWrite():
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/wiring_digital.c:49
  else
    PORTB &= ~_BV(pin); // Set pin low
  3a:	c0 98       	cbi	0x18, 0	; 24
setup():
C:\Users\eurhope\Documents\Arduino\spooky_eyes\spooky_eyes/spooky_eyes.ino:30
        digitalWrite(PIN_LED, LOW);
        delay(40);
  3c:	88 e2       	ldi	r24, 0x28	; 40
  3e:	90 e0       	ldi	r25, 0x00	; 0
  40:	5e d0       	rcall	.+188    	; 0xfe <delay>
  42:	c1 50       	subi	r28, 0x01	; 1
C:\Users\eurhope\Documents\Arduino\spooky_eyes\spooky_eyes/spooky_eyes.ino:26
    pinMode(PIN_LDR_SENSOR, INPUT);
    pinMode(PIN_LDR_POWER, OUTPUT);
    pinMode(PIN_LED, OUTPUT);

    // intro sequence
    for(byte i=0; i<5; i++) {
  44:	b1 f7       	brne	.-20     	; 0x32 <main+0xa>
C:\Users\eurhope\Documents\Arduino\spooky_eyes\spooky_eyes/spooky_eyes.ino:34
        digitalWrite(PIN_LED, LOW);
        delay(40);
    }

    // setup of the WDT
    cli();
  46:	f8 94       	cli
C:\Users\eurhope\Documents\Arduino\spooky_eyes\spooky_eyes/spooky_eyes.ino:35
    wdt_reset(); // reset watchdog timer
  48:	a8 95       	wdr
C:\Users\eurhope\Documents\Arduino\spooky_eyes\spooky_eyes/spooky_eyes.ino:36
    MCUSR &= ~(1 << WDRF); // remove reset flag
  4a:	84 b7       	in	r24, 0x34	; 52
  4c:	87 7f       	andi	r24, 0xF7	; 247
  4e:	84 bf       	out	0x34, r24	; 52
C:\Users\eurhope\Documents\Arduino\spooky_eyes\spooky_eyes/spooky_eyes.ino:37
    WDTCR = (1 << WDCE); // set WDCE, access prescaler
  50:	80 e1       	ldi	r24, 0x10	; 16
  52:	81 bd       	out	0x21, r24	; 33
C:\Users\eurhope\Documents\Arduino\spooky_eyes\spooky_eyes/spooky_eyes.ino:38
    WDTCR = 1 << WDP0 | 1 << WDP3; // set prescaler bits to to 8s
  54:	81 e2       	ldi	r24, 0x21	; 33
  56:	81 bd       	out	0x21, r24	; 33
C:\Users\eurhope\Documents\Arduino\spooky_eyes\spooky_eyes/spooky_eyes.ino:39
    WDTCR |= (1 << WDTIE); // access WDT interrupt
  58:	81 b5       	in	r24, 0x21	; 33
  5a:	80 64       	ori	r24, 0x40	; 64
  5c:	81 bd       	out	0x21, r24	; 33
C:\Users\eurhope\Documents\Arduino\spooky_eyes\spooky_eyes/spooky_eyes.ino:40
    sei();
  5e:	78 94       	sei
analogRead():
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/wiring_analog.c:66
    #elif F_CPU <= 1200000L            // Between 200 kHz and 1.2 MHz
      ADCSRA = _BV(ADEN) | _BV(ADSC) | _BV(ADPS1); // Prescaler to 4 -> F_CPU / 4
    #elif F_CPU <= 6400000L            // Between 1.2 MHz and 6.4 MHz
      ADCSRA = _BV(ADEN) | _BV(ADSC) | _BV(ADPS2); // Prescaler to 16 -> F_CPU / 16
    #else                              // Greater than 6.4 MHz
      ADCSRA = _BV(ADEN) | _BV(ADSC) | _BV(ADPS2) | _BV(ADPS1) | _BV(ADPS0); // Prescaler to 128 -> F_CPU / 128
  60:	d7 ec       	ldi	r29, 0xC7	; 199
digitalWrite():
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/wiring_digital.c:47
 * @param val The state to set. Valid options are HIGH or LOW
 */
void digitalWrite(uint8_t pin, uint8_t val)
{
  if(val)
    PORTB |= _BV(pin);  // Set pin high
  62:	c4 9a       	sbi	0x18, 4	; 24
analogRead():
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/wiring_analog.c:42
 * @return int16_t Analog reading on the pin (10-bit, 0-1023)
 */
int16_t analogRead(analog_pin_t pin)
{
  // MUX1 & MUX0 are 2 lowest bits in ADMUX
  ADMUX = (ADMUX & 0xFC) | pin;
  64:	87 b1       	in	r24, 0x07	; 7
  66:	83 60       	ori	r24, 0x03	; 3
  68:	87 b9       	out	0x07, r24	; 7
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/wiring_analog.c:66
    #elif F_CPU <= 1200000L            // Between 200 kHz and 1.2 MHz
      ADCSRA = _BV(ADEN) | _BV(ADSC) | _BV(ADPS1); // Prescaler to 4 -> F_CPU / 4
    #elif F_CPU <= 6400000L            // Between 1.2 MHz and 6.4 MHz
      ADCSRA = _BV(ADEN) | _BV(ADSC) | _BV(ADPS2); // Prescaler to 16 -> F_CPU / 16
    #else                              // Greater than 6.4 MHz
      ADCSRA = _BV(ADEN) | _BV(ADSC) | _BV(ADPS2) | _BV(ADPS1) | _BV(ADPS0); // Prescaler to 128 -> F_CPU / 128
  6a:	d6 b9       	out	0x06, r29	; 6
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/wiring_analog.c:70
    #endif
  #endif

  while(ADCSRA & _BV(ADSC)); // Wait for conversion
  6c:	36 99       	sbic	0x06, 6	; 6
  6e:	fe cf       	rjmp	.-4      	; 0x6c <__SREG__+0x2d>
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/wiring_analog.c:71
  int16_t result = ADCW;
  70:	84 b1       	in	r24, 0x04	; 4
  72:	95 b1       	in	r25, 0x05	; 5
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/wiring_analog.c:72
  ADCSRA = 0; // turn off ADC
  74:	16 b8       	out	0x06, r1	; 6
loop():
C:\Users\eurhope\Documents\Arduino\spooky_eyes\spooky_eyes/spooky_eyes.ino:46
}

void loop()
{
    digitalWrite(PIN_LDR_POWER, HIGH);
    if (analogRead((analog_pin_t)PIN_LDR_SENSOR) < 200) {
  76:	88 3c       	cpi	r24, 0xC8	; 200
  78:	91 05       	cpc	r25, r1
  7a:	e4 f4       	brge	.+56     	; 0xb4 <__SREG__+0x75>
C:\Users\eurhope\Documents\Arduino\spooky_eyes\spooky_eyes/spooky_eyes.ino:47
        if (cycles >= WAIT_CYCLES) {
  7c:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  80:	8a 30       	cpi	r24, 0x0A	; 10
  82:	c0 f0       	brcs	.+48     	; 0xb4 <__SREG__+0x75>
pinMode():
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/wiring_digital.c:27
 *        INPUT_PULLUP - set pin as input and enable internal pullup resistor
 */
void pinMode(uint8_t pin, uint8_t mode)
{
  if(mode == OUTPUT) // Pin as output
    DDRB |= _BV(pin);
  84:	b8 9a       	sbi	0x17, 0	; 23
main():
C:\Users\eurhope\Documents\Arduino\spooky_eyes\spooky_eyes/spooky_eyes.ino:59
}

void glowEyes()
{
    pinMode(PIN_LED, OUTPUT);
    for (byte i = 0; i < 255; i++) {
  86:	c0 e0       	ldi	r28, 0x00	; 0
glowEyes():
C:\Users\eurhope\Documents\Arduino\spooky_eyes\spooky_eyes/spooky_eyes.ino:60
        analogWrite(PIN_LED, i);
  88:	8c 2f       	mov	r24, r28
  8a:	23 d0       	rcall	.+70     	; 0xd2 <analogWrite.constprop.1>
C:\Users\eurhope\Documents\Arduino\spooky_eyes\spooky_eyes/spooky_eyes.ino:61
        delay(FADE_SPEED);
  8c:	84 e0       	ldi	r24, 0x04	; 4
  8e:	90 e0       	ldi	r25, 0x00	; 0
  90:	36 d0       	rcall	.+108    	; 0xfe <delay>
C:\Users\eurhope\Documents\Arduino\spooky_eyes\spooky_eyes/spooky_eyes.ino:59
}

void glowEyes()
{
    pinMode(PIN_LED, OUTPUT);
    for (byte i = 0; i < 255; i++) {
  92:	cf 5f       	subi	r28, 0xFF	; 255
  94:	cf 3f       	cpi	r28, 0xFF	; 255
  96:	c1 f7       	brne	.-16     	; 0x88 <__SREG__+0x49>
C:\Users\eurhope\Documents\Arduino\spooky_eyes\spooky_eyes/spooky_eyes.ino:63
        analogWrite(PIN_LED, i);
        delay(FADE_SPEED);
    }
    delay(GLOW_TIME);
  98:	8c ed       	ldi	r24, 0xDC	; 220
  9a:	95 e0       	ldi	r25, 0x05	; 5
  9c:	30 d0       	rcall	.+96     	; 0xfe <delay>
C:\Users\eurhope\Documents\Arduino\spooky_eyes\spooky_eyes/spooky_eyes.ino:66

    for (byte i = 255; i > 0; i--) {
        analogWrite(PIN_LED, i);
  9e:	8c 2f       	mov	r24, r28
  a0:	18 d0       	rcall	.+48     	; 0xd2 <analogWrite.constprop.1>
C:\Users\eurhope\Documents\Arduino\spooky_eyes\spooky_eyes/spooky_eyes.ino:67
        delay(FADE_SPEED);
  a2:	84 e0       	ldi	r24, 0x04	; 4
  a4:	90 e0       	ldi	r25, 0x00	; 0
  a6:	2b d0       	rcall	.+86     	; 0xfe <delay>
C:\Users\eurhope\Documents\Arduino\spooky_eyes\spooky_eyes/spooky_eyes.ino:65
        analogWrite(PIN_LED, i);
        delay(FADE_SPEED);
    }
    delay(GLOW_TIME);

    for (byte i = 255; i > 0; i--) {
  a8:	c1 50       	subi	r28, 0x01	; 1
  aa:	c9 f7       	brne	.-14     	; 0x9e <__SREG__+0x5f>
digitalWrite():
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/wiring_digital.c:49
void digitalWrite(uint8_t pin, uint8_t val)
{
  if(val)
    PORTB |= _BV(pin);  // Set pin high
  else
    PORTB &= ~_BV(pin); // Set pin low
  ac:	c0 98       	cbi	0x18, 0	; 24
pinMode():
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/wiring_digital.c:31
  if(mode == OUTPUT) // Pin as output
    DDRB |= _BV(pin);

  else // Pin as input or input pullup
  {
    DDRB &= ~_BV(pin); // Set pin as input
  ae:	b8 98       	cbi	0x17, 0	; 23
loop():
C:\Users\eurhope\Documents\Arduino\spooky_eyes\spooky_eyes/spooky_eyes.ino:49
{
    digitalWrite(PIN_LDR_POWER, HIGH);
    if (analogRead((analog_pin_t)PIN_LDR_SENSOR) < 200) {
        if (cycles >= WAIT_CYCLES) {
            glowEyes();
            cycles = 0;
  b0:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
digitalWrite():
void digitalWrite(uint8_t pin, uint8_t val)
{
  if(val)
    PORTB |= _BV(pin);  // Set pin high
  else
    PORTB &= ~_BV(pin); // Set pin low
  b4:	c4 98       	cbi	0x18, 4	; 24
enterSleepMode():
C:\Users\eurhope\Documents\Arduino\spooky_eyes\spooky_eyes/spooky_eyes.ino:79

void enterSleepMode()
{
    byte adcsra;

    adcsra = ADCSRA; // save ADC control and status register A
  b6:	96 b1       	in	r25, 0x06	; 6
C:\Users\eurhope\Documents\Arduino\spooky_eyes\spooky_eyes/spooky_eyes.ino:80
    ADCSRA &= ~(1 << ADEN); // disable ADC
  b8:	37 98       	cbi	0x06, 7	; 6
C:\Users\eurhope\Documents\Arduino\spooky_eyes\spooky_eyes/spooky_eyes.ino:82

    MCUCR |= (1 << SM1) & ~(1 << SM0); // Sleep-Modus = Power Down
  ba:	85 b7       	in	r24, 0x35	; 53
  bc:	80 61       	ori	r24, 0x10	; 16
  be:	85 bf       	out	0x35, r24	; 53
C:\Users\eurhope\Documents\Arduino\spooky_eyes\spooky_eyes/spooky_eyes.ino:83
    MCUCR |= (1 << SE); // set sleep enable
  c0:	85 b7       	in	r24, 0x35	; 53
  c2:	80 62       	ori	r24, 0x20	; 32
  c4:	85 bf       	out	0x35, r24	; 53
C:\Users\eurhope\Documents\Arduino\spooky_eyes\spooky_eyes/spooky_eyes.ino:84
    sleep_cpu(); // sleep
  c6:	88 95       	sleep
C:\Users\eurhope\Documents\Arduino\spooky_eyes\spooky_eyes/spooky_eyes.ino:85
    MCUCR &= ~(1 << SE); // reset sleep enable
  c8:	85 b7       	in	r24, 0x35	; 53
  ca:	8f 7d       	andi	r24, 0xDF	; 223
  cc:	85 bf       	out	0x35, r24	; 53
C:\Users\eurhope\Documents\Arduino\spooky_eyes\spooky_eyes/spooky_eyes.ino:87

    ADCSRA = adcsra; // restore ADC control and status register A
  ce:	96 b9       	out	0x06, r25	; 6
  d0:	c8 cf       	rjmp	.-112    	; 0x62 <__SREG__+0x23>

000000d2 <analogWrite.constprop.1>:
analogWrite.constprop.1():
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/wiring_pwm.c:48
    TCCR0B = _BV(CS02);
  #elif defined(PWM_PRESCALER_1024)   // PWM frequency = (F_CPU/256) / 1024
    TCCR0B = _BV(CS00) | _BV(CS02);
  #else // (PWM_PRESCALER_AUTO)       // Automatic prescaler calculation
    #if F_CPU >= 4800000L
      TCCR0B = _BV(CS00) | _BV(CS01); // PWM frequency = (F_CPU/256) / 64
  d2:	93 e0       	ldi	r25, 0x03	; 3
  d4:	93 bf       	out	0x33, r25	; 51
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/wiring_pwm.c:55
      TCCR0B = _BV(CS01);             // PWM frequency = (F_CPU/256) / 8
    #endif
  #endif

  // Set pin to output
  DDRB |= _BV(pin);
  d6:	b8 9a       	sbi	0x17, 0	; 23
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/wiring_pwm.c:58

  // Handle off condition
  if(val == 0)
  d8:	81 11       	cpse	r24, r1
  da:	05 c0       	rjmp	.+10     	; 0xe6 <analogWrite.constprop.1+0x14>
turnOffPWM():
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/wiring_pwm.c:22
 * @param pin Pin to disable PWM on
 */
void turnOffPWM(uint8_t pin)
{
  if(pin == 0)
    TCCR0A &= ~_BV(COM0A1);
  dc:	8f b5       	in	r24, 0x2f	; 47
  de:	8f 77       	andi	r24, 0x7F	; 127
  e0:	8f bd       	out	0x2f, r24	; 47
digitalWrite():
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/wiring_digital.c:49
  e2:	c0 98       	cbi	0x18, 0	; 24
  e4:	08 95       	ret
analogWrite.constprop.1():
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/wiring_pwm.c:65
    turnOffPWM(pin);        // Turn off PWM
    digitalWrite(pin, LOW); // Set pin low
  }

  // Handle on condition
  else if(val == 255)
  e6:	8f 3f       	cpi	r24, 0xFF	; 255
  e8:	29 f4       	brne	.+10     	; 0xf4 <analogWrite.constprop.1+0x22>
turnOffPWM():
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/wiring_pwm.c:22
 * @param pin Pin to disable PWM on
 */
void turnOffPWM(uint8_t pin)
{
  if(pin == 0)
    TCCR0A &= ~_BV(COM0A1);
  ea:	8f b5       	in	r24, 0x2f	; 47
  ec:	8f 77       	andi	r24, 0x7F	; 127
  ee:	8f bd       	out	0x2f, r24	; 47
digitalWrite():
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/wiring_digital.c:47
 * @param val The state to set. Valid options are HIGH or LOW
 */
void digitalWrite(uint8_t pin, uint8_t val)
{
  if(val)
    PORTB |= _BV(pin);  // Set pin high
  f0:	c0 9a       	sbi	0x18, 0	; 24
  f2:	08 95       	ret
analogWrite.constprop.1():
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/wiring_pwm.c:80
    {
      // Set waveform generation mode and output number
      #if defined(PWM_PHASE_CORRECT)
        TCCR0A |= _BV(WGM00) | _BV(COM0A1);
      #else // (PWM_FAST)
        TCCR0A |= _BV(WGM00) | _BV(WGM01) | _BV(COM0A1);
  f4:	9f b5       	in	r25, 0x2f	; 47
  f6:	93 68       	ori	r25, 0x83	; 131
  f8:	9f bd       	out	0x2f, r25	; 47
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/wiring_pwm.c:82
      #endif
      OCR0A = val;
  fa:	86 bf       	out	0x36, r24	; 54
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/wiring_pwm.c:95
        TCCR0A |= _BV(WGM00) | _BV(WGM01) | _BV(COM0B1);
      #endif
      OCR0B = val;
    }
  }
}
  fc:	08 95       	ret

000000fe <delay>:
delay():
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/wiring.c:51
 *        specified as parameter.
 *
 * @param ms The number of milliseconds to pause
 */
void delay(uint16_t ms)
{
  fe:	06 c0       	rjmp	.+12     	; 0x10c <delay+0xe>
_delay_ms():
c:\users\eurhope\appdata\local\arduino15\packages\arduino\tools\avr-gcc\7.3.0-atmel3.6.1-arduino7\avr\include\util/delay.h:187
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 100:	ef e5       	ldi	r30, 0x5F	; 95
 102:	f9 e0       	ldi	r31, 0x09	; 9
 104:	31 97       	sbiw	r30, 0x01	; 1
 106:	f1 f7       	brne	.-4      	; 0x104 <delay+0x6>
 108:	00 c0       	rjmp	.+0      	; 0x10a <delay+0xc>
 10a:	00 00       	nop
delay():
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/wiring.c:52
  while(ms--)
 10c:	01 97       	sbiw	r24, 0x01	; 1
 10e:	c0 f7       	brcc	.-16     	; 0x100 <delay+0x2>
C:\Users\eurhope\AppData\Local\Arduino15\packages\MicroCore\hardware\avr\2.3.0\cores\microcore/wiring.c:54
    _delay_ms(1);
}
 110:	08 95       	ret

00000112 <__vector_8>:
__vector_8():
C:\Users\eurhope\Documents\Arduino\spooky_eyes\spooky_eyes/spooky_eyes.ino:15
#define WAIT_CYCLES 10 // multiplier of watchdog

volatile byte cycles = 0;

ISR(WDT_vect)
{
 112:	1f 92       	push	r1
 114:	0f 92       	push	r0
 116:	0f b6       	in	r0, 0x3f	; 63
 118:	0f 92       	push	r0
 11a:	11 24       	eor	r1, r1
 11c:	8f 93       	push	r24
C:\Users\eurhope\Documents\Arduino\spooky_eyes\spooky_eyes/spooky_eyes.ino:16
    cycles++;
 11e:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 122:	8f 5f       	subi	r24, 0xFF	; 255
 124:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
C:\Users\eurhope\Documents\Arduino\spooky_eyes\spooky_eyes/spooky_eyes.ino:17
}
 128:	8f 91       	pop	r24
 12a:	0f 90       	pop	r0
 12c:	0f be       	out	0x3f, r0	; 63
 12e:	0f 90       	pop	r0
 130:	1f 90       	pop	r1
 132:	18 95       	reti
